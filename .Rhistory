?rmd
install.packages("rmarkdown")
install.packages("rmarkdown")
gpa <- c(3.1, 2.3, 3, 1.9, 2.5, 3.7, 3.4, 2.6, 2.8, 1.6, 2, 2.9, 2.3, 3.2, 1.8, 1.4, 2, 3.8, 2.2, 1.5)
ets <- c(5.5, 4.8, 4.7, 3.9, 4.5, 6.2, 6, 5.2, 4.7, 4.3, 4.9, 5.4, 5, 6.3, 4.6, 4.3, 5, 5.9, 4.1, 4.7)
model <- lm(ets ~ gpa)
summary(model)
predicted_gpa <- (4.2 - 3.054) / 0.778
predicted_gpa
new_data <- data.frame(gpa = predicted_gpa)
pred_interval <- predict(model, new_data, interval = "prediction", level = 0.90)
pred_interval
x <- c(2,6,9, 14, 21,23)
y<- c(16,18,  26, 33, 28, 39)
model <- lm(y ~ x)
summary(model)
gpa <- c(3.1, 2.3, 3, 1.9, 2.5, 3.7, 3.4, 2.6, 2.8, 1.6, 2, 2.9, 2.3, 3.2, 1.8, 1.4, 2, 3.8, 2.2, 1.5)
ets <- c(5.5, 4.8, 4.7, 3.9, 4.5, 6.2, 6, 5.2, 4.7, 4.3, 4.9, 5.4, 5, 6.3, 4.6, 4.3, 5, 5.9, 4.1, 4.7)
model <- lm(ets ~ gpa)
summary(model)
confint(model, level = 95)
confint(model, level = 0.95)
gpa <- c(3.1, 2.3, 3, 1.9, 2.5, 3.7, 3.4, 2.6, 2.8, 1.6, 2, 2.9, 2.3, 3.2, 1.8, 1.4, 2, 3.8, 2.2, 1.5)
ets <- c(5.5, 4.8, 4.7, 3.9, 4.5, 6.2, 6, 5.2, 4.7, 4.3, 4.9, 5.4, 5, 6.3, 4.6, 4.3, 5, 5.9, 4.1, 4.7)
fit_gpa <- lm(ets ~ gpa)
output <- predict(
fit_gpa,
newdata = data.frame(ets = c(4, 4.2)),
interval = "prediction",
level = 0.90
)
output
round(pnorm(75, 85, 6),4)
gpa <- c(3.1, 2.3, 3, 1.9, 2.5, 3.7, 3.4, 2.6, 2.8, 1.6, 2, 2.9, 2.3, 3.2, 1.8, 1.4, 2, 3.8, 2.2, 1.5)
ets <- c(5.5, 4.8, 4.7, 3.9, 4.5, 6.2, 6, 5.2, 4.7, 4.3, 4.9, 5.4, 5, 6.3, 4.6, 4.3, 5, 5.9, 4.1, 4.7)
fit_gpa <- lm(gpa ~ ets)
summary(fit_gpa)
confint(fit_gpa)
transfer <- c(16, 9,  17,  12,  22,  13, 8,  15,  19,  11)
broken <- c(1, 0, 2, 0, 3, 1, 0, 1, 2, 0)
fit_broken <- lm(broken ~ transfer)
summary(fit_broken)
anova(fit_broken)
confint(fit_broken, level = 0.90)
women <- c(64, 65, 65, 66, 66, 67, 68, 70)
men <- c(68, 68, 69, 70, 72, 72, 73, 75)
gg <- lm(men ~ women)
summary(gg)
confint(gg)
confint(gg, level = 0.9)
women <- c(64, 65, 65, 66, 66, 67, 68, 70)
men <- c(68, 68, 69, 70, 72, 72, 73, 75)
t.test(men ~ women, var.equal = TRUE)
women <- c(64, 65, 65, 66, 66, 67, 68, 70)
men <- c(68, 68, 69, 70, 72, 72, 73, 75)
model <- lm(men ~ women)
summary(model)
p_value_one_tailed <- summary(model)$coefficients[2, 4] / 2
p_value_one_tailed  # 0.00395
# 90% Confidence Interval (two-sided equivalent to one-sided 95%)
confint(model, level = 0.90)
pnorm(97, 85, 6) - pnorm(73, 85, 6)
gpa <- c(3.1, 2.3, 3, 1.9, 2.5, 3.7, 3.4, 2.6, 2.8, 1.6, 2, 2.9, 2.3, 3.2, 1.8, 1.4, 2, 3.8, 2.2, 1.5)
ets <- c(5.5, 4.8, 4.7, 3.9, 4.5, 6.2, 6, 5.2, 4.7, 4.3, 4.9, 5.4, 5, 6.3, 4.6, 4.3, 5, 5.9, 4.1, 4.7)
gg <- lm(ets~gpa)
summary(gg)
model <- lm(gpa ~ ets)  # Regress GPA on ETS scores
summary(model)
setwd("~/STAT1400/CompLab/assignment1")
glakes <- read.table("glakes.txt", header = TRUE)
m1 <- lm(Time ~ Tonnage, data = glakes)
m2 <- lm(log(Time) ~ I(Tonnage^0.5), data = glakes)
newdata <- data.frame(Tonnage = 10000)
m1_pred <- predict(m1, newdata, interval = "confidence", level = 0.95)
m1_pred_pred <- predict(m1, newdata, interval = "prediction", level = 0.95)
plot(Time ~ Tonnage, data = glakes, ylim = range(m1_pred_pred))
matlines(newdata$Time, m1_pred, lty = c(1,2,2), col = "blue")
plot(glakes$Tonnage, glakes$Time, main = "Model M1: Time ~ Tonnage",
xlab = "Tonnage", ylab = "Time", pch = 19, col = "blue")
abline(m1, col = "red")
tonnage_seq <- seq(min(glakes$Tonnage), max(glakes$Tonnage), length.out = 100)
m1_conf <- predict(m1, newdata = data.frame(Tonnage = tonnage_seq), interval = "confidence")
m1_pred_band <- predict(m1, newdata = data.frame(Tonnage = tonnage_seq), interval = "prediction")
lines(tonnage_seq, m1_conf[, "lwr"], col = "red", lty = 2)
lines(tonnage_seq, m1_conf[, "upr"], col = "red", lty = 2)
lines(tonnage_seq, m1_pred_band[, "lwr"], col = "green", lty = 2)
lines(tonnage_seq, m1_pred_band[, "upr"], col = "green", lty = 2)
legend("topleft", legend = c("Data", "Fitted", "CI (mean)", "PI (new)"),
col = c("blue", "red", "red", "green"), lty = c(NA, 1, 2, 2), pch = c(19, NA, NA, NA))
glakes
str(glakes)
plot(Time ~ Tonnage, data = glakes, ylim = range(m1_pred_pred))
newdata
m1_pred_pred <- predict(m1, newdata, interval = "prediction", level = 0.95)
m1_pred_pred
m1_pred
glakes <- read.table("glakes.txt", header = TRUE)
m1 <- lm(Time ~ Tonnage, data = glakes)
newdata <- data.frame(Tonnage = 10000)
m1_pred <- predict(m1, newdata, interval = "confidence", level = 0.95)
m1_pred_pred <- predict(m1, newdata, interval = "prediction", level = 0.95)
m1_pred
m1_pred_pred
plot(glakes$Tonnage, glakes$Time, main = "Model M1: Time ~ Tonnage",
xlab = "Tonnage", ylab = "Time", pch = 19, col = "blue")
abline(m1, col = "red")
tonnage_seq <- seq(min(glakes$Tonnage), max(glakes$Tonnage), length.out = 100)
m1_conf <- predict(m1, newdata = data.frame(Tonnage = tonnage_seq), interval = "confidence")
m1_pred_band <- predict(m1, newdata = data.frame(Tonnage = tonnage_seq), interval = "prediction")
lines(tonnage_seq, m1_conf[, "lwr"], col = "red", lty = 2)
lines(tonnage_seq, m1_conf[, "upr"], col = "red", lty = 2)
lines(tonnage_seq, m1_pred_band[, "lwr"], col = "green", lty = 2)
lines(tonnage_seq, m1_pred_band[, "upr"], col = "green", lty = 2)
legend("topleft", legend = c("Data", "Fitted", "CI (mean)", "PI (new)"),
col = c("blue", "red", "red", "green"), lty = c(NA, 1, 2, 2), pch = c(19, NA, NA, NA))
glakes <- read.table("glakes.txt", header = TRUE)
m2 <- lm(log(Time) ~ I(Tonnage^0.5), data = glakes)
newdata <- data.frame(Tonnage = 10000)
m2_pred_log <- predict(m2, newdata, interval = "confidence", level = 0.95)
m2_pred <- exp(m2_pred_log)
m2_pred
m2_pred_pred_log <- predict(m2, newdata, interval = "prediction", level = 0.95)
m2_pred_pred <- exp(m2_pred_pred_log)
m2_pred_pred
plot(glakes$Tonnage, log(glakes$Time), main = "Model M2: log(Time) ~ sqrt(Tonnage)",
xlab = "Tonnage", ylab = "log(Time)", pch = 19, col = "blue")
curve(predict(m2, newdata = data.frame(Tonnage = x)), add = TRUE, col = "red")
m2_conf_log <- predict(m2, newdata = data.frame(Tonnage = tonnage_seq), interval = "confidence")
m2_pred_band_log <- predict(m2, newdata = data.frame(Tonnage = tonnage_seq), interval = "prediction")
lines(tonnage_seq, m2_conf_log[, "lwr"], col = "red", lty = 2)
lines(tonnage_seq, m2_conf_log[, "upr"], col = "red", lty = 2)
lines(tonnage_seq, m2_pred_band_log[, "lwr"], col = "green", lty = 2)
lines(tonnage_seq, m2_pred_band_log[, "upr"], col = "green", lty = 2)
legend("topleft", legend = c("Data", "Fitted", "CI (mean)", "PI (new)"),
col = c("blue", "red", "red", "green"), lty = c(NA, 1, 2, 2), pch = c(19, NA, NA, NA))
tonnage_seq <- seq(min(glakes$Tonnage), max(glakes$Tonnage), length.out = 100)
pred_log <- predict(m2, newdata = data.frame(Tonnage = tonnage_seq))
lines(tonnage_seq, pred_log, col = "red")
glakes <- read.table("glakes.txt", header = TRUE)
m2 <- lm(log(Time) ~ I(Tonnage^0.5), data = glakes)
plot(glakes$Tonnage, log(glakes$Time),
main = "Model M2: log(Time) ~ sqrt(Tonnage)",
xlab = "Tonnage", ylab = "log(Time)",
pch = 19, col = "blue")
tonnage_seq <- seq(min(glakes$Tonnage), max(glakes$Tonnage), length.out = 100)
pred_log <- predict(m2, newdata = data.frame(Tonnage = tonnage_seq))
lines(tonnage_seq, pred_log, col = "red", lwd = 2)
lines(tonnage_seq, conf_log[, "lwr"], col = "red", lty = 2)  # CI (dashed)
conf_log <- predict(m2, newdata = data.frame(Tonnage = tonnage_seq), interval = "confidence")
pred_band_log <- predict(m2, newdata = data.frame(Tonnage = tonnage_seq), interval = "prediction")
lines(tonnage_seq, conf_log[, "lwr"], col = "red", lty = 2)  # CI (dashed)
lines(tonnage_seq, conf_log[, "upr"], col = "red", lty = 2)
lines(tonnage_seq, pred_band_log[, "lwr"], col = "green", lty = 2)  # PI (dashed)
lines(tonnage_seq, pred_band_log[, "upr"], col = "green", lty = 2)
legend("topleft",
legend = c("Data", "Fitted", "CI (mean)", "PI (new)"),
col = c("blue", "red", "red", "green"),
lty = c(NA, 1, 2, 2),
pch = c(19, NA, NA, NA))
> glakes <- read.table("glakes.txt", header = TRUE)
> glakes <- read.table("glakes.txt", header = TRUE)
glakes <- read.table("glakes.txt", header = TRUE)
m2 <- lm(log(Time) ~ I(Tonnage^0.5), data = glakes)
newdata <- data.frame(Tonnage = 10000)
m2_pred_log <- predict(m2, newdata, interval = "confidence", level = 0.95)
m2_pred <- exp(m2_pred_log)
m2_pred
m2_pred_pred_log <- predict(m2, newdata, interval = "prediction", level = 0.95)
m2_pred_pred <- exp(m2_pred_pred_log)
m2_pred_pred plot(glakes$Tonnage, log(glakes$Time), main = "Model M2: log(Time) ~ sqrt(Tonnage)",
plot(glakes$Tonnage, log(glakes$Time), main = "Model M2: log(Time) ~ sqrt(Tonnage)",
+      xlab = "Tonnage", ylab = "log(Time)", pch = 19, col = "blue")
# Load data
glakes <- read.table("glakes.txt", header = TRUE)
# Fit Model M2
m2 <- lm(log(Time) ~ I(Tonnage^0.5), data = glakes)
# --- Interval Calculations for Tonnage = 10,000 ---
newdata <- data.frame(Tonnage = 10000)
# Confidence interval (mean response)
m2_pred_log <- predict(m2, newdata, interval = "confidence", level = 0.95)
m2_pred <- exp(m2_pred_log)  # Back-transform from log scale
# Prediction interval (new observation)
m2_pred_pred_log <- predict(m2, newdata, interval = "prediction", level = 0.95)
m2_pred_pred <- exp(m2_pred_pred_log)  # Back-transform
# Print results
cat("Model M2 at Tonnage = 10,000:\n")
cat("95% CI for mean response (back-transformed):",
round(m2_pred[1, "lwr"], 2), "to", round(m2_pred[1, "upr"], 2), "\n")
cat("95% PI for new observation (back-transformed):",
round(m2_pred_pred[1, "lwr"], 2), "to", round(m2_pred_pred[1, "upr"], 2), "\n\n")
# --- Plotting Code ---
# Create base plot (log-scale y-axis)
plot(glakes$Tonnage, log(glakes$Time),
main = "Model M2: log(Time) ~ sqrt(Tonnage)",
xlab = "Tonnage", ylab = "log(Time)",
pch = 19, col = "blue")
tonnage_seq <- seq(min(glakes$Tonnage), max(glakes$Tonnage), length.out = 100)
pred_log <- predict(m2, newdata = data.frame(Tonnage = tonnage_seq))
lines(tonnage_seq, pred_log, col = "red", lwd = 2)  # Fitted line
conf_log <- predict(m2, newdata = data.frame(Tonnage = tonnage_seq),
interval = "confidence")
pred_band_log <- predict(m2, newdata = data.frame(Tonnage = tonnage_seq),
interval = "prediction")
lines(tonnage_seq, conf_log[, "lwr"], col = "red", lty = 2)  # CI
lines(tonnage_seq, conf_log[, "upr"], col = "red", lty = 2)
lines(tonnage_seq, pred_band_log[, "lwr"], col = "green", lty = 2)  # PI
lines(tonnage_seq, pred_band_log[, "upr"], col = "green", lty = 2)
legend("topleft",
legend = c("Data", "Fitted", "CI (mean)", "PI (new)"),
col = c("blue", "red", "red", "green"),
lty = c(NA, 1, 2, 2),
pch = c(19, NA, NA, NA))
set.seed(123)
mean_no_disease <- 195.2745
mean_disease <- 216.1906
var_no_disease <- 1303.9231 var_disease <- 1850.2488
set.seed(123)
mean_no_disease <- 195.2745
mean_disease <- 216.1906
var_no_disease <- 1303.9231
var_disease <- 1850.2488
n_no_disease <- 51
n_disease <- 320
group1 <- rnorm(n_no_disease, mean_no_disease, sqrt(var_no_disease))
group2 <- rnorm(n_disease, mean_disease, sqrt(var_disease))
t_test_result <- t.test(group1, group2, var.equal = FALSE, conf.level = 0.99)
t_test_result
t_test_result$conf.int
str(glakes)
data <- read.table("glakes.txt", header = TRUE)
str(data)
plot(data$Tonnage, data$Time,
xlab = "Tonnage", ylab = "Time",
main = "Scatterplot of Time vs. Tonnage")
data_fit <- lm(Time~Tonnage, data = data)
abline(data_fit)
m1 <- lm(Time ~ Tonnage, data = glakes)
abline(m1, col = "red")
abline(lm(Time ~ Tonnage), col = "red", lwd = 2)
plot(Time~Tonnage, data = data)
data <- read.table("glakes.txt", header = TRUE)
model1 <- lm(Time ~ Tonnage, data = data)
plot(data$Tonnage, data$Time, main = "Tonnage vs Time", xlab = "Tonnage", ylab = "Time")
abline(model1, col = "blue", lwd = 2)
abline(model1, col = "orange", lwd = 2)
abline(model1, col = "blue", lwd = 2)
summary(model1)
par(mfrow = c(2, 2))
plot(model1)
> 1 - pnorm (15, 25, 4)
1 - pnorm (15, 25, 4)
knitr::opts_chunk$set(echo = TRUE)
par(mfrow = c(2, 2))
plot(fit_glakes)
glakes_infl <- influence.measures(fit_glakes)
data <- read.table("glakes.txt", header = TRUE)
data <- read.table("glakes.txt", header = TRUE)
data <- read.table("glakes.txt", header = TRUE)
setwd("~/STAT1400/CompLab/assignment1")
data <- read.table("glakes.txt", header = TRUE)
data <- read.table("glakes.txt", header = TRUE)
confint(fit_production, level = 0.95)
confint(fit_production, level = 0.95)
knitr::opts_chunk$set(echo = TRUE)
1 - pnorm (15, 25, 4)
probability <- pnorm(35, 25, 4) - pnorm(20, 25, 4)
probability
qnorm(1- 0.01, 25, 4)
lower_bound <- qnorm(0.05, 25, 4)
upper_bound <- qnorm(0.95, 25, 4)
lower_bound
upper_bound
set.seed(123)
mean_no_disease <- 195.2745
mean_disease <- 216.1906
var_no_disease <- 1303.9231
var_disease <- 1850.2488
n_no_disease <- 51
n_disease <- 320
group1 <- rnorm(n_no_disease, mean_no_disease, sqrt(var_no_disease))
group2 <- rnorm(n_disease, mean_disease, sqrt(var_disease))
t_test_result <- t.test(group1, group2, var.equal = FALSE, conf.level = 0.99)
t_test_result
t_test_result$conf.int
data <- read.table("glakes.txt", header = TRUE)
data <- read.table("glakes.txt", header = TRUE)
knitr::opts_chunk$set(echo = TRUE)
1 - pnorm (15, 25, 4)
knitr::opts_chunk$set(echo = TRUE)
1 - pnorm (15, 25, 4)
knitr::opts_chunk$set(echo = TRUE)
1 - pnorm (15, 25, 4)
probability <- pnorm(35, 25, 4) - pnorm(20, 25, 4)
probability
data <- read.table("glakes.txt", header = TRUE)
data <- read.table("glakes.txt", header = TRUE)
data <- read.table("glakes.txt", header = TRUE)
data <- read.table("glakes.txt", header = TRUE)
data <- read.table("glakes.txt", header = TRUE)
data <- read.table("glakes.txt", header = TRUE)
data <- read.table("glakes.txt", header = TRUE)
data <- read.table("glakes.txt", header = TRUE)
**Answer:**
setwd("~/STAT1400/CompLab/assignment1")
data <- read.table("glakes.txt", header = TRUE)
data <- read.table("glakes.txt", header = TRUE)
setwd("~/STAT1400/CompLab")
data <- read.table("glakes.txt", header = TRUE)
setwd("~/STAT1400/CompLab/assignment1")
setwd("~/STAT1400/CompLab/assignment1")
data <- read.table("glakes.txt", header = TRUE)
model1 <- lm(Time ~ Tonnage, data = data)
plot(data$Tonnage, data$Time, main = "Tonnage vs Time", xlab = "Tonnage", ylab = "Time")
abline(model1, col = "blue", lwd = 2)
data <- read.table("glakes.txt", header = TRUE)
data <- read.table("glakes.txt", header = TRUE)
glakes <- read.table("glakes.txt", header = TRUE)
gg <- lm(log(Time) ~ sqrt(Tonnage), data = glakes)
summary(gg)
setwd("~/STAT1400/CompLab/assignment1")
glakes <- read.table("glakes.txt", header = TRUE)
m2 <- lm(log(Time) ~ sqrt(Tonnage), data = glakes)
summary(m2)
glakes <- read.table("glakes.txt", header = TRUE)
fit_glakes <- lm(Time ~ Tonnage, data = data)
data <- read.table("glakes.txt", header = TRUE)
getwd()
data <- read.table("glakes.txt", header = TRUE)
data <- read.table("glakes.txt", header = TRUE)
setwd("~/STAT1400/CompLab/assignment1")
data <- read.table("glakes.txt", header = TRUE)
